C51 COMPILER V8.08   ³Æ_Ø                                                                  05/06/2019 13:24:34 PAGE 1   


C51 COMPILER V8.08, COMPILATION OF MODULE ³Æ_Ø
OBJECT MODULE PLACED IN ³ÆÖØ.OBJ
COMPILER INVOKED BY: D:\keil C51\KEIL UV3 8.08 + ×¢²á»ú\KEIL UV3 8.08\C51\BIN\C51.EXE ³ÆÖØ.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include <reg51.h>
   2          #include <intrins.h>    
   3          #define uchar unsigned char
   4          #define uint  unsigned int
   5          /*12864Òº¾§ÆÁ ¶Ë¿Ú¶¨Òå*/
   6          #define data  P0           //Êý¾Ý¿Ú
   7          sbit   RS=P3^5;            //¼Ä´æÆ÷Ñ¡ÔñÊäÈë 
   8          sbit   RW=P3^6;            //Òº¾§¶Á/Ð´¿ØÖÆ
   9          sbit    E=P3^4;            //Òº¾§Ê¹ÄÜ¿ØÖÆ
  10          sbit  PSB=P3^7;            //´®/²¢·½Ê½¿ØÖÆ
  11          sbit wela=P2^6;
  12          sbit dula=P2^7;
  13          /*HX711³ÆÖØ´«¸ÐÆ÷ ¶Ë¿Ú¶¨Òå*/
  14          unsigned long InitialWeight;
  15          unsigned long FinalWeight;      
  16          uchar string[]={"0000"};
  17          sbit  HX711_SCK=P1^0;
  18          sbit HX711_DOUT=P1^1;
  19          
  20          uchar code dis1[] = {"ÖØÁ¿Îª£º"};
  21          uchar code dis2[] = {"g"};
  22          
  23          //////////////////ÒÔÏÂÊÇ12864Çý¶¯³ÌÐò////////////////                                                     
             -         
  24          //º¯Êý¹¦ÄÜ£ºÑÓÊ±º¯Êý
  25          void delay(int ms)
  26          {
  27   1          while(ms--)
  28   1              {
  29   2            uchar i;
  30   2                for(i=0;i<250;i++)  
  31   2                 {
  32   3                  _nop_();                       
  33   3                      _nop_();
  34   3                      _nop_();
  35   3                      _nop_();
  36   3                 }
  37   2              }
  38   1      }
  39          
  40          //º¯Êý¹¦ÄÜ£º¼ì²éLCDÃ¦×´Ì¬
  41          //lcd_busyÎª1Ê±£¬Ã¦£¬µÈ´ý¡£lcd-busyÎª0Ê±,ÏÐ£¬¿ÉÐ´Ö¸ÁîÓëÊý¾Ý¡£
  42          bit busy()
  43           { 
  44   1          bit result;
  45   1          P0=0x00;              //¹ØµôÊýÂë¹ÜµÄÐÅºÅ¡£×èÖ¹ÊýÂë¹ÜÊÜµ½P0¿ÚÐÅºÅµÄÓ°Ïì
  46   1          RS=0;
  47   1          RW=1;
  48   1           E=1;
  49   1          delay(1);
  50   1          result = (bit)(P0&0x80);
  51   1           E=0;
  52   1          return(result); 
  53   1       }
  54          
C51 COMPILER V8.08   ³Æ_Ø                                                                  05/06/2019 13:24:34 PAGE 2   

  55          //º¯Êý¹¦ÄÜ£ºÐ´Ö¸ÁîÊý¾Ýµ½LCD                                                  
  56          //RS=L£¬RW=L£¬E=¸ßÂö³å£¬D0-D7=Ö¸ÁîÂë¡£
  57          void wcmd(uchar cmd)
  58          {                       
  59   1         while(busy());
  60   1          RS=0;
  61   1          RW=0;
  62   1           E=0;
  63   1          _nop_();
  64   1          _nop_(); 
  65   1          P0=cmd;
  66   1          delay(1);
  67   1           E=1;
  68   1          delay(1);
  69   1           E=0;  
  70   1      }
  71                                                                         
  72          //º¯Êý¹¦ÄÜ£ºÐ´ÏÔÊ¾Êý¾Ýµ½LCD                                                  
  73          //RS=H£¬RW=L£¬E=¸ßÂö³å£¬D0-D7=Êý¾Ý¡£                               
  74          void wdat(uchar dat)
  75          {                          
  76   1         while(busy());
  77   1          RS=1;
  78   1          RW=0;
  79   1           E=0;
  80   1          P0=dat;
  81   1          delay(1);
  82   1           E=1;
  83   1          delay(1);
  84   1           E=0; 
  85   1      }
  86                                                                       
  87          //º¯Êý¹¦ÄÜ£ºLCD³õÊ¼»¯Éè¶¨                                                 
  88          void Init_12864()
  89          { 
  90   1          PSB=1;         //²¢¿Ú·½Ê½
  91   1          
  92   1          wcmd(0x34);      //À©³äÖ¸Áî²Ù×÷
  93   1          delay(5);
  94   1          wcmd(0x30);      //»ù±¾Ö¸Áî²Ù×÷
  95   1          delay(5);
  96   1          wcmd(0x0c);      //ÏÔÊ¾¿ª£¬¹Ø¹â±ê
  97   1          delay(5);
  98   1          wcmd(0x01);      //Çå³ýLCDµÄÏÔÊ¾ÄÚÈÝ
  99   1          delay(5);
 100   1      }
 101          
 102          //º¯Êý¹¦ÄÜ£ºÉè¶¨ÏÔÊ¾Î»ÖÃ                                          
 103          void pos(uchar X,uchar Y)
 104          {                          
 105   1         uchar  pos;
 106   1         if (X==0)
 107   1           {X=0x80;}
 108   1         else if (X==1)
 109   1           {X=0x90;}
 110   1         else if (X==2)
 111   1           {X=0x88;}
 112   1         else if (X==3)
 113   1           {X=0x98;}
 114   1         pos=X+Y ;  
 115   1         wcmd(pos);     //ÏÔÊ¾µØÖ·
 116   1      }
C51 COMPILER V8.08   ³Æ_Ø                                                                  05/06/2019 13:24:34 PAGE 3   

 117          //////////////////ÒÔÉÏÊÇ12864Çý¶¯³ÌÐò////////////////
 118          
 119          //////////////////ÒÔÏÂÊÇHX711³ÆÖØ´«¸ÐÆ÷Çý¶¯³ÌÐò//////////////// 
 120          //º¯Êý¹¦ÄÜ£ºÑÓÊ±º¯Êý
 121          void delay_HX711(void)
 122          {
 123   1              _nop_();
 124   1              _nop_();
 125   1      }
 126          
 127          //º¯Êý¹¦ÄÜ£º¶ÁÈ¡HX711²âÁ¿Öµ
 128          unsigned long HX711_Read(void)  //ÔöÒæ128
 129          {
 130   1              unsigned long weight; 
 131   1              unsigned char i; 
 132   1              HX711_DOUT=1; 
 133   1              delay_HX711();
 134   1              HX711_SCK=0; 
 135   1              weight=0;
 136   1              E=1; 
 137   1              while(HX711_DOUT); 
 138   1              E=0;
 139   1              for(i=0;i<24;i++)
 140   1              { 
 141   2                HX711_SCK=1; 
 142   2                weight=weight<<1; 
 143   2                HX711_SCK=0; 
 144   2                if(HX711_DOUT)
 145   2                      weight++; 
 146   2              } 
 147   1              HX711_SCK=1; 
 148   1          weight=weight^0x800000;   //µÚ25¸öÂö³åÏÂ½µÑØÀ´Ê±£¬×ª»»Êý¾Ý
 149   1              delay_HX711();
 150   1              HX711_SCK=0;  
 151   1              return(weight);
 152   1      }
 153          
 154          //º¯Êý¹¦ÄÜ£º¶ÁÈ¡HX711ÖØÁ¿³õÖµ 
 155          void Get_InitialWeight()
 156          {
 157   1        InitialWeight= HX711_Read();  
 158   1      } 
 159          
 160          //º¯Êý¹¦ÄÜ£º²âËã×îÖÕÎïÌåÖØÁ¿
 161          void Weight()
 162          {               
 163   1              FinalWeight=HX711_Read();
 164   1              FinalWeight=FinalWeight-InitialWeight;
 165   1              FinalWeight=FinalWeight/430;
 166   1              string[0]=FinalWeight/1000+0x30;
 167   1              string[1]=FinalWeight%1000/100+0x30;
 168   1              string[2]=FinalWeight%100/10+0x30;
 169   1              string[3]=FinalWeight%10+0x30;
 170   1      }
 171          
 172          //º¯Êý¹¦ÄÜ£ºÒº¾§ÆÁÏÔÊ¾×Ö·û      
 173          void display()
 174          {
 175   1              uchar i;
 176   1              wela=0;
 177   1              dula=0; 
 178   1              wcmd(0x01);      //Çå³ýLCDµÄÏÔÊ¾ÄÚÈÝ
C51 COMPILER V8.08   ³Æ_Ø                                                                  05/06/2019 13:24:34 PAGE 4   

 179   1              delay(10);
 180   1              
 181   1              pos(0,0);
 182   1              for(i=0;i<=8;i++)
 183   1              {
 184   2                wdat(dis1[i]);
 185   2              }
 186   1              
 187   1              pos(0,4);
 188   1              wdat(string[0]);
 189   1              wdat(string[1]);
 190   1              wdat(string[2]);
 191   1              wdat(string[3]);
 192   1              wdat(dis2[0]);
 193   1      }
 194          
 195          /*****************ÒÔÏÂÊÇÖ÷º¯ÊýÇý¶¯³ÌÐò***************/
 196          void main()
 197          {
 198   1              Get_InitialWeight();
 199   1              Init_12864();
 200   1              delay(100);
 201   1              while(1)
 202   1              {
 203   2                Weight();
 204   2                display();
 205   2                delay(5);
 206   2              }
 207   1      }
 208          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    551    ----
   CONSTANT SIZE    =     11    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     13       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
